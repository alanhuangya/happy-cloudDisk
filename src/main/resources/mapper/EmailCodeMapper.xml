<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alan.mapper.EmailCodeMapper">

    <resultMap type="com.alan.entity.po.EmailCode" id="EmailCodeMap">
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmailCodeMap">
        select email,
               code,
               create_time,
               status
        from email_code
        where email = #{email}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmailCodeMap">
        select
        email, code, create_time, status
        from email_code
        <where>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from email_code
        <where>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="selectByEmailAndCode" resultType="com.alan.entity.po.EmailCode">
        select *
        from email_code
        where email = #{email}
          and code = #{code}
    </select>

    <!-- 插入 （匹配有值的字段）-->
    <insert id="insert" parameterType="com.alan.entity.po.EmailCode">
        INSERT INTO email_code
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.email != null">
                email,
            </if>
            <if test="bean.code != null">
                code,
            </if>
            <if test="bean.createTime != null">
                create_time,
            </if>
            <if test="bean.status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.email!=null">
                #{bean.email},
            </if>
            <if test="bean.code!=null">
                #{bean.code},
            </if>
            <if test="bean.createTime!=null">
                #{bean.createTime},
            </if>
            <if test="bean.status!=null">
                #{bean.status},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch" keyProperty="email" useGeneratedKeys="true">
        insert into email_code(code, create_time, status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.code}, #{entity.createTime}, #{entity.status})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="email" useGeneratedKeys="true">
        insert into email_code(code, create_time, status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.code}, #{entity.createTime}, #{entity.status})
        </foreach>
        on duplicate key update
        code = values(code),
        create_time = values(create_time),
        status = values(status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update email_code
        <set>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where email = #{email}
    </update>

    <!--设置邮箱验证码的状态-->
    <update id="updateStatusByEmail">
        update email_code
        <set>
            status = #{status}
        </set>
        where email = #{email}
    </update>
    <update id="disableEmailCode">
        update email_code
        set status = 1
        where email = #{email}
          and status = 0
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from email_code
        where email = #{email}
    </delete>

</mapper>

